import{r as u,o as I}from"./index-DeIxpO4k.js";const F=l=>new Intl.NumberFormat("de-DE",{style:"currency",currency:"EUR"}).format(l),g="cartDB",r="cart",v=()=>{const[l,c]=u.useState([]),[m,C]=u.useState(0),n=async()=>{try{return await I(g,1,{upgrade(t){t.objectStoreNames.contains(r)||t.createObjectStore(r,{keyPath:"id"})}})}catch(t){throw console.error("Failed to initialize IndexedDB:",t),t}},o=(t,e)=>{const s=new CustomEvent("cartUpdated",{detail:{action:t,product:e}});window.dispatchEvent(s)},y=async()=>{try{const e=await(await n()).getAll(r);c(e||[]),C(e.length||0)}catch(t){console.error("Failed to load cart from IndexedDB:",t)}},h=async()=>{try{return await(await n()).count(r)}catch(t){return console.error("Failed to get cart length from IndexedDB:",t),0}},w=async t=>{try{await(await n()).put(r,t),o()}catch(e){console.error("Failed to save item to IndexedDB:",e)}},b=async t=>{try{await(await n()).delete(r,t),o()}catch(e){console.error("Failed to delete item from IndexedDB:",e)}},f=async()=>{try{await(await n()).clear(r),o()}catch(t){console.error("Failed to clear cart in IndexedDB:",t)}},D=async t=>{c(e=>{if(e.some(i=>i.id===t.id)){const i=e.map(a=>a.id===t.id?{...a,quantity:a.quantity+1}:a);return w(i.find(a=>a.id===t.id)),o("added",t),i}const d={...t,quantity:1};return w(d),o("added",t),[...e,d]})},B=async t=>{c(e=>{const s=e.filter(d=>d.id!==t);return b(t),s})},E=async()=>{c([]),f()};return u.useEffect(()=>{y();const t=()=>{y()};return window.addEventListener("cartUpdated",t),()=>{window.removeEventListener("cartUpdated",t)}},[]),{cart:l,cartLength:m,addToCart:D,removeFromCart:B,clearCart:E,getCartLength:h}};export{F as f,v as u};
